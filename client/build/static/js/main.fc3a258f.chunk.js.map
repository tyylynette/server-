{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","key","style","margin","credits","to","renderContent","Landing","textAlign","Dashboard","SurveyNew","App","exact","path","component","combineReducers","state","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector","console","log"],"mappings":"6YAGaA,EAAY,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEAGXC,IAAMC,IAAI,qBAHC,OAGvBC,EAHuB,OAI7BJ,EAAS,CAAEK,KCPa,aDOKC,QAASF,EAAIG,OAJb,2CAAN,uDAOZC,EAAc,SAAAC,GAAK,8CAAI,WAAMT,GAAN,eAAAC,EAAA,sEAChBC,IAAMQ,KAAK,cAAeD,GADV,OAC5BL,EAD4B,OAElCJ,EAAS,CAAEK,KCZa,aDYKC,QAASF,EAAIG,OAFR,2CAAJ,uD,iBEL1BI,E,uKACM,IAAD,OACP,OACE,kBAAC,IAAD,CACEC,KAAK,SACLC,YAAY,yBACZC,OAAQ,IACRL,MAAO,SAAAA,GAAK,OAAI,EAAKM,MAAMP,YAAYC,IACvCO,UAAWC,8CAEX,4BAAQC,UAAU,OAAlB,oB,GAVeC,aAgBRC,cACb,KACAC,EAFaD,CAGbT,GCnBIW,E,8KAEF,OAAQC,KAAKR,MAAMS,MACjB,KAAK,KACH,OACF,KAAK,EACH,OACE,4BACE,uBAAGC,KAAK,gBAAR,sBAGN,QACE,MAAO,CACL,wBAAIC,IAAI,KACN,kBAAC,EAAD,OAEF,wBAAIA,IAAI,IAAIC,MAAO,CAAEC,OAAQ,WAA7B,YACYL,KAAKR,MAAMS,KAAKK,SAE5B,wBAAIH,IAAI,KACN,uBAAGD,KAAK,eAAR,e,+BAOR,OACE,6BACE,yBAAKP,UAAU,eACb,kBAAC,IAAD,CACEY,GAAIP,KAAKR,MAAMS,KAAO,UAAY,IAClCN,UAAU,mBAFZ,UAMA,wBAAIA,UAAU,SAASK,KAAKQ,uB,GApCjBZ,aA+CNC,mBAJf,YACE,MAAO,CAAEI,KADwB,EAARA,QAIZJ,CAAyBE,GCzCzBU,EATC,WACd,OACE,yBAAKL,MAAO,CAAEM,UAAW,WACvB,sCADF,qCCKEC,EAAY,kBAAM,0CAClBC,EAAY,kBAAM,2CAElBC,E,kLAEFb,KAAKR,MAAMhB,c,+BAGX,OACE,yBAAKmB,UAAU,aACb,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,WAAWC,UAAWL,IACxC,kBAAC,IAAD,CAAOI,KAAK,eAAeC,UAAWJ,W,GAZhChB,aAsBHC,cACb,KACAC,EAFaD,CAGbgB,GClCaI,cAAgB,CAC7BhB,KCFa,WAAgC,IAAvBiB,EAAsB,uDAAd,KAAMC,EAAQ,uCAC5C,OAAQA,EAAOrC,MACb,INJsB,aMKpB,OAAOqC,EAAOpC,UAAW,EAC3B,QACE,OAAOmC,MCGPE,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MAExDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,UAGzBC,QAAQC,IAAI,gBAAiBpC,8CAC7BmC,QAAQC,IAAI,SAAUpC,gB","file":"static/js/main.fc3a258f.chunk.js","sourcesContent":["import axios from 'axios';\nimport { FETCH_USER } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  // redux thunk allows us to control when we want to dispatch the action\n  // we only dispatch the action after the axios req is completed\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data }); //get user model with user id\n};\n\nexport const handleToken = token => async dispatch => {\n  const res = await axios.post('/api/stripe', token); // pass stripe token to BE server\n  dispatch({ type: FETCH_USER, payload: res.data }); //get user model back with updated credits\n};\n","export const FETCH_USER = 'fetch_user';\n","import React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nclass Payments extends Component {\n  render() {\n    return (\n      <StripeCheckout\n        name=\"Emaily\"\n        description=\"$5 for 5 email credits\"\n        amount={500}\n        token={token => this.props.handleToken(token)}\n        stripeKey={process.env.REACT_APP_STRIPE_KEY}\n      >\n        <button className=\"btn\">Add Credits</button>\n      </StripeCheckout>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(Payments);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Payments from './Payments';\n\nclass Header extends Component {\n  renderContent() {\n    switch (this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li>\n            <a href=\"/auth/google\">Login with Google</a>\n          </li>\n        );\n      default:\n        return [\n          <li key=\"1\">\n            <Payments />\n          </li>,\n          <li key=\"3\" style={{ margin: '0 10px' }}>\n            Credits: {this.props.auth.credits}\n          </li>,\n          <li key=\"2\">\n            <a href=\"/api/logout\">Logout</a>\n          </li>\n        ];\n    }\n  }\n\n  render() {\n    return (\n      <nav>\n        <div className=\"nav-wrapper\">\n          <Link\n            to={this.props.auth ? 'surveys' : '/'}\n            className=\"left brand-logo\"\n          >\n            Emaily\n          </Link>\n          <ul className=\"right\">{this.renderContent()}</ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return { auth };\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\n\nconst Landing = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>Emaily</h1>\n      Collect feedback from your users\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions'; // import all action creators from file and assign to actions obj\n//browserrouter decides what components should be displayed based on url\n//route sets up rule for what shold be on screen\n\nimport Header from './Header';\nimport Landing from './Landing';\nconst Dashboard = () => <h2>Dashboard</h2>;\nconst SurveyNew = () => <h2> SurveyNew</h2>;\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <BrowserRouter>\n          <div>\n            <Header />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/surveys\" component={Dashboard} />\n            <Route path=\"/surveys/new\" component={SurveyNew} />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n//browserrouter can have at most one child\n// component with \"landing\" is to display landing page to users\n\nexport default connect(\n  null,\n  actions\n)(App);\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  auth: authReducer\n});\n","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case FETCH_USER:\n      return action.payload || false; //if empty string will return false (user not logged in)\n    default:\n      return state;\n  }\n}\n","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n\nconsole.log('STRIPE key is', process.env.REACT_APP_STRIPE_KEY);\nconsole.log('Env is', process.env.NODE_ENV);\n"],"sourceRoot":""}